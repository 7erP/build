#!/bin/bash -e

ROOTDIR=$(dirname $(dirname $(readlink -f $0)))
OUT=${ROOTDIR}/out
IMAGE=${ROOTDIR}/image
ROOTFSOUT=${OUT}/rootfs
MOUNTPOINT=${OUT}/rootfs/ubuntu

DOWNLOADPATH=http://cdimage.ubuntu.com/ubuntu-core/releases/15.10/release
DOWNLOADFILE=ubuntu-core-15.10-core-armhf.tar.gz
DOWNLOADFILE_CHECKSUM=626ae25e3df7f494dfd1a7aaec14acdc9d6fe767

BOARD=$1
if [ $# != 1 ] ; then
    BOARD=kylin
fi
ROOTFSIMAGE=${BOARD}-rootfs.img

echo Making rootfs for ${BOARD} board!

# Create directories
for dir in ${OUT} ${IMAGE} ${ROOTFSOUT} ${MOUNTPOINT}; do
    if [ ! -d ${dir} ]; then
        mkdir -p ${dir}
    fi
done

while [ ! -f ${ROOTFSOUT}/${DOWNLOADFILE} -o ${DOWNLOADFILE_CHECKSUM}x \
          != $(sha1sum ${ROOTFSOUT}/${DOWNLOADFILE} | cut -d' ' -f1)x ]; do
    curl ${DOWNLOADPATH}/${DOWNLOADFILE} > ${ROOTFSOUT}/${DOWNLOADFILE}
done

dd if=/dev/zero of=${IMAGE}/${ROOTFSIMAGE} bs=1M count=300

finish() {
    sudo umount ${MOUNTPOINT} || true
    echo -e "\e[31m MAKE ROOTFS FAILED.\e[0m"
    exit -1
}

echo Format rootfs to ext4
mkfs.ext4 ${IMAGE}/${ROOTFSIMAGE}

echo Mount rootfs to ${MOUNTPOINT}
sudo mount ${IMAGE}/${ROOTFSIMAGE} ${MOUNTPOINT}
trap finish ERR

echo Extract image to ${MOUNTPOINT}
sudo tar -xpzf ${ROOTFSOUT}/${DOWNLOADFILE} -C ${MOUNTPOINT}

PASSWD=$(perl -e 'print crypt($ARGV[0], "nothing")' "rockchip")
sudo sed -i "s/root:.:/root:$PASSWD:/" ${MOUNTPOINT}/etc/shadow
sudo useradd --root ${MOUNTPOINT} -s '/bin/bash' -m rockchip -p $PASSWD

echo Copy overlay files
sudo cp -r ${ROOTDIR}/build/overlay/* ${MOUNTPOINT}/

echo Umount rootfs
sudo umount ${MOUNTPOINT}

echo Rootfs Image: ${IMAGE}/${ROOTFSIMAGE}
